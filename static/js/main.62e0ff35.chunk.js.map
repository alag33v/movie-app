{"version":3,"sources":["components/images/logo.svg","components/images/oscar.svg","components/styles/StyledHeader.js","components/elements/Header.js","config.js","components/styles/StyledGrid.js","components/elements/Grid.js","components/styles/StyledHeroImage.js","components/elements/HeroImage.js","components/styles/StyledLoadMoreBtn.js","components/elements/LoadMoreBtn.js","components/styles/StyledMovieThumb.js","components/elements/MovieThumb.js","components/styles/StyledSearchBar.js","components/elements/SearchBar.js","components/styles/StyledSpinner.js","components/elements/Spinner.js","components/images/no_image.jpg","components/Home.js","components/hooks/useHomeFetch.js","components/styles/StyledNavigation.js","components/elements/Navigation.js","components/styles/StyledMovieInfo.js","components/elements/MovieInfo.js","helpers.js","components/styles/StyledMovieInfoBar.js","components/elements/MovieInfoBar.js","components/images/unknown.png","components/styles/StyledActor.js","components/elements/Actor.js","components/Movie.js","components/hooks/useMovieFetch.js","components/NotFound.js","components/styles/GlobalStyle.js","components/App.js","index.js"],"names":["StyledHeader","styled","div","StyledLogo","img","StyledOscar","Header","className","to","src","logo","alt","oscar","API_URL","API_KEY","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","SEARCH_BASE_URL","POPULAR_BASE_URL","StyledGrid","StyledGridContent","Grid","header","children","StyledHeroImage","props","image","HeroImage","title","text","StyledLoadMoreBtn","button","LoadMoreBtn","callback","type","onClick","StyledMovieThumb","MovieThumb","movieId","clickable","StyledSearchBar","StyledSearchBarContent","SearchBar","useState","state","setState","timeOut","useRef","name","size","placeholder","onChange","event","clearTimeout","current","target","value","setTimeout","StyledSpinner","Spinner","Home","searchTerm","setSearchTerm","movies","loading","setLoading","error","setError","fetchMovies","endpoint","a","isLoadMore","search","fetch","json","result","prev","results","heroImage","currentPage","page","totalPages","total_pages","console","log","useEffect","sessionStorage","homeState","JSON","parse","setItem","stringify","useHomeFetch","backdrop_path","original_title","overview","map","movie","movieName","poster_path","NoImage","id","searchEndpoint","popularEndpoint","StyledNavigation","Navigation","movieTitle","StyledMovieInfo","backdrop","MovieInfo","vote_average","directors","length","director","credit_id","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","StyledMovieInfoBar","MovieInfoBar","budget","revenue","StyledActor","Actor","actor","profile_path","character","Movie","fetchData","useCallback","creditsEndpoint","creditsResult","crew","filter","member","job","actors","cast","localStorage","useMovieFetch","runtime","NotFound","GlobalStyle","createGlobalStyle","App","path","default","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62e0ff35.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.d6298e79.svg\";","export default __webpack_public_path__ + \"static/media/oscar.c1797b7a.svg\";","import styled from 'styled-components';\r\n\r\nexport const StyledHeader = styled.div`\r\n  background: #1c1c1c;\r\n  padding: 0 20px;\r\n  box-sizing: border-box;\r\n  height: 8vh;\r\n\r\n  .header-content {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    max-width: 1280px;\r\n    min-height: 120px;\r\n    margin: 0 auto;\r\n    box-sizing: border-box;\r\n\r\n    @media screen and (max-width: 500px) {\r\n      max-width: 1280px;\r\n      min-height: 0px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledLogo = styled.img`\r\n  margin-top: 1vh;\r\n  height: 6vh;\r\n`;\r\n\r\nexport const StyledOscar = styled.img`\r\n  margin-top: 1.8vh;\r\n  height: 5vh;\r\n`;\r\n","import { Link } from '@reach/router';\r\nimport logo from '../images/logo.svg';\r\nimport oscar from '../images/oscar.svg';\r\nimport { StyledHeader, StyledLogo, StyledOscar } from '../styles/StyledHeader';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <StyledHeader>\r\n      <div className='header-content'>\r\n        <Link to='/movie-app'>\r\n          <StyledLogo src={logo} alt='logo' />\r\n        </Link>\r\n        <StyledOscar src={oscar} alt='oscar' />\r\n      </div>\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const API_URL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = 'bd6c19bb7179fab20f27d1157a9c6052';\r\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\r\nconst BACKDROP_SIZE = 'original';\r\nconst POSTER_SIZE = 'w500';\r\n\r\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&query=`;\r\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}`;\r\n\r\nexport {\r\n  API_URL,\r\n  API_KEY,\r\n  IMAGE_BASE_URL,\r\n  BACKDROP_SIZE,\r\n  POSTER_SIZE,\r\n  SEARCH_BASE_URL,\r\n  POPULAR_BASE_URL\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledGrid = styled.div`\r\n  max-width: 1280px;\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n  h1 {\r\n    font-family: 'Abel', sans-serif;\r\n    font-size: 42px;\r\n\r\n    @media screen and (max-width: 768px) {\r\n      font-size: 22px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledGridContent = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(5, minmax(100px, 1fr));\r\n  grid-gap: 40px;\r\n  position: relative;\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    grid-template-columns: repeat(4, minmax(100px, 1fr));\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\r\n  }\r\n\r\n  @media screen and (max-width: 375px) {\r\n    grid-template-columns: repeat(1, 1fr);\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { StyledGrid, StyledGridContent } from '../styles/StyledGrid';\r\n\r\nconst Grid = ({ header, children }) => {\r\n  return (\r\n    <StyledGrid>\r\n      <h1>{header}</h1>\r\n      <StyledGridContent>{children}</StyledGridContent>\r\n    </StyledGrid>\r\n  );\r\n};\r\n\r\nGrid.propTypes = {\r\n  header: PropTypes.string,\r\n  children: PropTypes.array\r\n};\r\n\r\nexport default Grid;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledHeroImage = styled.div`\r\n  background: ${props =>\r\n    `linear-gradient(\r\n      to bottom, rgba(0,0,0,0)\r\n      39%,rgba(0,0,0,0)\r\n      41%,rgba(0,0,0,0.65)\r\n      100%\r\n    ),\r\n    url('${props.image}'), #1c1c1c`};\r\n  background-size: 100%, cover !important;\r\n  background-position: center, center !important;\r\n  width: 100%;\r\n  height: 92vh;\r\n  position: relative;\r\n  animation: animateHeroimage 1s;\r\n\r\n  .heroimage-content {\r\n    max-width: 1280px;\r\n    padding: 20px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  .heroimage-text {\r\n    z-index: 100;\r\n    max-width: 700px;\r\n    position: absolute;\r\n    bottom: 40px;\r\n    margin-right: 20px;\r\n    min-height: 100px;\r\n    background: rgba(0, 0, 0, 0);\r\n    color: #fff;\r\n\r\n    h1 {\r\n      font-family: 'Abel', sans-serif;\r\n      font-size: 48px;\r\n      color: #fff;\r\n\r\n      @media screen and (max-width: 720px) {\r\n        font-size: 38px;\r\n        color: #fff;\r\n      }\r\n    }\r\n\r\n    p {\r\n      font-family: 'Abel', sans-serif;\r\n      font-size: 22px;\r\n      line-height: 26px;\r\n      color: #fff;\r\n\r\n      @media screen and (max-width: 720px) {\r\n        font-size: 16px;\r\n        line-height: 20px;\r\n        color: #fff;\r\n      }\r\n    }\r\n\r\n    @media screen and (max-width: 720px) {\r\n      max-width: 100%;\r\n    }\r\n  }\r\n\r\n  @keyframes animateHeroimage {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { StyledHeroImage } from '../styles/StyledHeroImage';\r\n\r\nconst HeroImage = ({ image, title, text }) => {\r\n  return (\r\n    <StyledHeroImage image={image}>\r\n      <div className='heroimage-content'>\r\n        <div className='heroimage-text'>\r\n          <h1>{title}</h1>\r\n          <p>{text}</p>\r\n        </div>\r\n      </div>\r\n    </StyledHeroImage>\r\n  );\r\n};\r\n\r\nHeroImage.propTypes = {\r\n  image: PropTypes.string,\r\n  title: PropTypes.string,\r\n  text: PropTypes.string\r\n};\r\n\r\nexport default HeroImage;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledLoadMoreBtn = styled.button`\r\n  background: #000;\r\n  width: 25%;\r\n  min-width: 200px;\r\n  height: 70px;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  border-radius: 40px;\r\n  font-family: 'Abel', sans-serif;\r\n  font-size: 28px;\r\n  max-width: 1280px;\r\n  display: block;\r\n  margin: 20px auto;\r\n  padding: 0 20px;\r\n  outline: none;\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { StyledLoadMoreBtn } from '../styles/StyledLoadMoreBtn';\r\n\r\nconst LoadMoreBtn = ({ text, callback }) => {\r\n  return (\r\n    <StyledLoadMoreBtn type='button' onClick={callback}>\r\n      {text}\r\n    </StyledLoadMoreBtn>\r\n  );\r\n};\r\n\r\nLoadMoreBtn.propTypes = {\r\n  text: PropTypes.string,\r\n  callback: PropTypes.func\r\n};\r\n\r\nexport default LoadMoreBtn;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledMovieThumb = styled.div`\r\n  img {\r\n    width: 100%;\r\n    /* min-height: 340px; */\r\n    transition: all 0.3s;\r\n    object-fit: cover;\r\n    border-radius: 20px;\r\n    animation: animateMovieThumb 0.5s;\r\n\r\n    :hover {\r\n      opacity: 0.8;\r\n    }\r\n\r\n    .clickable {\r\n      cursor: pointer;\r\n    }\r\n\r\n    @keyframes animateMovieThumb {\r\n      from {\r\n        opacity: 0;\r\n      }\r\n      to {\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { Link } from '@reach/router';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledMovieThumb } from '../styles/StyledMovieThumb';\r\n\r\nconst MovieThumb = ({ image, movieId, clickable }) => {\r\n  return (\r\n    <StyledMovieThumb>\r\n      {clickable ? (\r\n        <Link to={`/${movieId}`}>\r\n          <img className='clickable' src={image} alt='movie thumb' />\r\n        </Link>\r\n      ) : (\r\n        <img src={image} alt='movie thumb' />\r\n      )}\r\n    </StyledMovieThumb>\r\n  );\r\n};\r\n\r\nMovieThumb.propTypes = {\r\n  image: PropTypes.string,\r\n  movieId: PropTypes.number,\r\n  clickable: PropTypes.bool\r\n};\r\n\r\nexport default MovieThumb;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledSearchBar = styled.div`\r\n  width: 100%;\r\n  height: 105px;\r\n  background: #1c1c1c;\r\n  padding: 25px 20px 0px 20px;\r\n  box-sizing: border-box;\r\n  color: #fff;\r\n`;\r\n\r\nexport const StyledSearchBarContent = styled.div`\r\n  max-width: 1280px;\r\n  width: 100%;\r\n  height: 55px;\r\n  background: #353535;\r\n  margin: 0 auto;\r\n  border-radius: 40px;\r\n  position: relative;\r\n  color: #fff;\r\n\r\n  .fa-search {\r\n    position: absolute;\r\n    left: 20px;\r\n    top: 12px;\r\n    color: #fff;\r\n    z-index: 1000;\r\n  }\r\n\r\n  input {\r\n    font-family: 'Abel', sans-serif;\r\n    font-size: 28px;\r\n    position: absolute;\r\n    left: 0px;\r\n    margin: 8px 0;\r\n    padding: 0 0 0 60px;\r\n    border: 0;\r\n    width: 95%;\r\n    background: transparent;\r\n    height: 40px;\r\n    color: #fff;\r\n    box-sizing: border-box;\r\n\r\n    :focus {\r\n      outline: none;\r\n    }\r\n\r\n    @media screen and (max-width: 720px) {\r\n      font-size: 28px;\r\n    }\r\n  }\r\n`;\r\n","import { useState, useRef } from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  StyledSearchBar,\r\n  StyledSearchBarContent\r\n} from '../styles/StyledSearchBar';\r\n\r\nconst SearchBar = ({ callback }) => {\r\n  const [state, setState] = useState('');\r\n  const timeOut = useRef(null);\r\n\r\n  const doSearch = event => {\r\n    clearTimeout(timeOut.current);\r\n    setState(event.target.value);\r\n    timeOut.current = setTimeout(() => {\r\n      callback(event.target.value);\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <StyledSearchBar>\r\n      <StyledSearchBarContent>\r\n        <FontAwesome className='fa-search' name='search' size='2x' />\r\n        <input\r\n          type='text'\r\n          placeholder='Search Movie'\r\n          onChange={doSearch}\r\n          value={state}\r\n        />\r\n      </StyledSearchBarContent>\r\n    </StyledSearchBar>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  callback: PropTypes.func\r\n};\r\n\r\nexport default SearchBar;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledSpinner = styled.div`\r\n  border: 5px solid #f3f3f3; /* Light grey */\r\n  border-top: 5px solid #16d47b; /* Blue */\r\n  border-radius: 50%;\r\n  width: 50px;\r\n  height: 50px;\r\n  animation: spin 0.8s linear infinite;\r\n  margin: 20px auto;\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","import { StyledSpinner } from '../styles/StyledSpinner';\r\n\r\nconst Spinner = () => <StyledSpinner />;\r\n\r\nexport default Spinner;\r\n","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import { useState } from 'react';\r\nimport { useHomeFetch } from './hooks/useHomeFetch';\r\nimport Grid from './elements/Grid';\r\nimport HeroImage from './elements/HeroImage';\r\nimport LoadMoreBtn from './elements/LoadMoreBtn';\r\nimport MovieThumb from './elements/MovieThumb';\r\nimport SearchBar from './elements/SearchBar';\r\nimport Spinner from './elements/Spinner';\r\nimport {\r\n  IMAGE_BASE_URL,\r\n  BACKDROP_SIZE,\r\n  POSTER_SIZE,\r\n  SEARCH_BASE_URL,\r\n  POPULAR_BASE_URL\r\n} from '../config';\r\nimport NoImage from './images/no_image.jpg';\r\n\r\nconst Home = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [{ state, loading, error }, fetchMovies] = useHomeFetch(searchTerm);\r\n\r\n  const searchMovie = search => {\r\n    const endpoint = search ? SEARCH_BASE_URL + search : POPULAR_BASE_URL;\r\n\r\n    setSearchTerm(search);\r\n    fetchMovies(endpoint);\r\n  };\r\n\r\n  const loadMoreMovies = () => {\r\n    const searchEndpoint = `${SEARCH_BASE_URL}${searchTerm}&page=${\r\n      state.currentPage + 1\r\n    }`;\r\n    const popularEndpoint = `${POPULAR_BASE_URL}&page=${state.currentPage + 1}`;\r\n    const endpoint = searchTerm ? searchEndpoint : popularEndpoint;\r\n\r\n    fetchMovies(endpoint);\r\n  };\r\n\r\n  if (error) return <div>Something went wrong...</div>;\r\n  if (!state.movies[0]) return <Spinner />;\r\n\r\n  return (\r\n    <>\r\n      <HeroImage\r\n        image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.movies[0].backdrop_path}`}\r\n        title={state.movies[0].original_title}\r\n        text={state.movies[0].overview}\r\n      />\r\n      <SearchBar callback={searchMovie} />\r\n      <Grid header={searchTerm ? 'Search Result' : 'Popular Movies'}>\r\n        {state.movies.map(movie => (\r\n          <MovieThumb\r\n            movieName={movie.original_title}\r\n            image={\r\n              movie.poster_path\r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                : NoImage\r\n            }\r\n            movieId={movie.id}\r\n            key={movie.id}\r\n            clickable\r\n          />\r\n        ))}\r\n      </Grid>\r\n      {loading && <Spinner />}\r\n      {state.currentPage < state.totalPages && !loading && (\r\n        <LoadMoreBtn text='Load More' callback={loadMoreMovies} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from 'react';\r\nimport { POPULAR_BASE_URL } from '../../config';\r\n\r\nexport const useHomeFetch = searchTerm => {\r\n  const [state, setState] = useState({ movies: [] });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const fetchMovies = async endpoint => {\r\n    setError(false);\r\n    setLoading(true);\r\n\r\n    const isLoadMore = endpoint.search('page');\r\n\r\n    try {\r\n      const result = await (await fetch(endpoint)).json();\r\n      setState(prev => {\r\n        return {\r\n          ...prev,\r\n          movies:\r\n            isLoadMore !== -1\r\n              ? [...prev.movies, ...result.results]\r\n              : [...result.results],\r\n          heroImage: prev.heroImage || result.results[0],\r\n          currentPage: result.page,\r\n          totalPages: result.total_pages\r\n        };\r\n      });\r\n    } catch (error) {\r\n      setError(true);\r\n      console.log(error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (sessionStorage.homeState) {\r\n      setState(JSON.parse(sessionStorage.homeState));\r\n      setLoading(false);\r\n    } else {\r\n      fetchMovies(POPULAR_BASE_URL);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!searchTerm) {\r\n      sessionStorage.setItem('homeState', JSON.stringify(state));\r\n    }\r\n  }, [searchTerm, state]);\r\n\r\n  return [{ state, loading, error }, fetchMovies];\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledNavigation = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 70px;\r\n  background: #353535;\r\n  color: #fff;\r\n\r\n  .navigation-content {\r\n    max-width: 1280px;\r\n    margin: 0 auto;\r\n    padding: 0 20px;\r\n    width: 100%;\r\n\r\n    p {\r\n      font-family: 'Abel', sans-serif;\r\n      font-size: 22px;\r\n      float: left;\r\n      color: #fff;\r\n      padding-right: 10px;\r\n      text-decoration: none;\r\n\r\n      @media screen and (max-width: 768px) {\r\n        font-size: 16px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { Link } from '@reach/router';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledNavigation } from '../styles/StyledNavigation';\r\n\r\nconst Navigation = ({ movieTitle }) => {\r\n  return (\r\n    <StyledNavigation>\r\n      <div className='navigation-content'>\r\n        <Link to='/movie-app'>\r\n          <p>Home</p>\r\n        </Link>\r\n        <p>|</p>\r\n        <p>{movieTitle}</p>\r\n      </div>\r\n    </StyledNavigation>\r\n  );\r\n};\r\n\r\nNavigation.propTypes = {\r\n  movieTitle: PropTypes.string\r\n};\r\n\r\nexport default Navigation;\r\n","import styled from 'styled-components';\r\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\r\n\r\nexport const StyledMovieInfo = styled.div`\r\n  background: ${props =>\r\n    props.backdrop\r\n      ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.backdrop}')`\r\n      : '#000'};\r\n  background-size: cover !important;\r\n  background-position: center !important;\r\n  width: 100%;\r\n  padding: 40px 20px;\r\n  box-sizing: border-box;\r\n  animation: animateMovieinfo 1s;\r\n\r\n  .movieinfo-content {\r\n    max-width: 1280px;\r\n    min-height: 450px;\r\n    margin: 0 auto;\r\n    background: rgb(0, 0, 0, 0.7);\r\n    border-radius: 20px;\r\n    position: relative;\r\n  }\r\n\r\n  .movieinfo-thumb {\r\n    width: 300px;\r\n    float: left;\r\n\r\n    @media screen and (max-width: 768px) {\r\n      width: 100% !important;\r\n    }\r\n  }\r\n\r\n  .movieinfo-text {\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    padding: 40px;\r\n    color: #fff;\r\n    overflow: hidden;\r\n\r\n    h1 {\r\n      font-family: 'Abel', sans-serif;\r\n      font-size: 48px;\r\n      margin: 0;\r\n\r\n      @media screen and (max-width: 1000px) {\r\n        font-size: 32px !important;\r\n      }\r\n    }\r\n\r\n    h3 {\r\n      font-size: 16px;\r\n      line-height: 0;\r\n      margin-top: 30px;\r\n    }\r\n\r\n    p {\r\n      font-family: 'Abel', sans-serif;\r\n      font-size: 18px;\r\n      line-height: 26px;\r\n    }\r\n  }\r\n\r\n  .rating-director {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n  }\r\n\r\n  .score {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 35px;\r\n    height: 35px;\r\n    background: #fff;\r\n    color: #000;\r\n    font-weight: 800;\r\n    border-radius: 25px;\r\n    margin: 0px 0 0 0;\r\n  }\r\n\r\n  .director {\r\n    margin: 0 0 0 40px;\r\n\r\n    p {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    min-height: 600px;\r\n    height: auto;\r\n  }\r\n\r\n  @keyframes animateMovieinfo {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport MovieThumb from './MovieThumb';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\nimport NoImage from '../images/no_image.jpg';\r\nimport { StyledMovieInfo } from '../styles/StyledMovieInfo';\r\n\r\nconst MovieInfo = ({ movie }) => {\r\n  return (\r\n    <StyledMovieInfo backdrop={movie.backdrop_path}>\r\n      <div className='movieinfo-content'>\r\n        <div className='movieinfo-thumb'>\r\n          <MovieThumb\r\n            image={\r\n              movie.poster_path\r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                : NoImage\r\n            }\r\n            clickable={false}\r\n          />\r\n        </div>\r\n        <div className='movieinfo-text'>\r\n          <h1>{movie.title}</h1>\r\n          <h3>PLOT</h3>\r\n          <p>{movie.overview}</p>\r\n          <div className='rating-director'>\r\n            <div>\r\n              <h3>IMDB RATING</h3>\r\n              <div className='score'>{movie.vote_average}</div>\r\n            </div>\r\n            <div className='director'>\r\n              <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\r\n              {movie.directors.map(director => (\r\n                <p key={director.credit_id}>{director.name}</p>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </StyledMovieInfo>\r\n  );\r\n};\r\n\r\nMovieInfo.propTypes = {\r\n  movie: PropTypes.object\r\n};\r\n\r\nexport default MovieInfo;\r\n","// Convert time to hours and minutes\r\nexport const calcTime = time => {\r\n  const hours = Math.floor(time / 60);\r\n  const mins = time % 60;\r\n  return `${hours}h ${mins}m`;\r\n};\r\n\r\n// Convert a number to money formatting\r\nexport const convertMoney = money => {\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0\r\n  });\r\n  return formatter.format(money);\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledMovieInfoBar = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  min-height: 100px;\r\n  height: auto;\r\n  background: #1c1c1c;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  font-family: 'Abel', sans-serif;\r\n  font-size: 20px;\r\n\r\n  .movieinfobar-content {\r\n    max-width: 1280px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    color: #fff;\r\n  }\r\n\r\n  .movieinfobar-content-col {\r\n    float: left;\r\n    width: 33.33%;\r\n    box-sizing: border-box;\r\n    padding: 10px 20px 0 0;\r\n  }\r\n\r\n  .movieinfobar-info {\r\n    padding: 5px 0 0 10px;\r\n    float: left;\r\n  }\r\n\r\n  .fa-time,\r\n  .fa-revenue {\r\n    float: left;\r\n    margin-top: -4px;\r\n  }\r\n\r\n  .fa-budget {\r\n    float: left;\r\n    margin-top: -3px;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    .fa-time,\r\n    .fa-revenue,\r\n    .fa-budget {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 425px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n","import FontAwesome from 'react-fontawesome';\r\nimport PropTypes from 'prop-types';\r\nimport { calcTime, convertMoney } from '../../helpers';\r\nimport { StyledMovieInfoBar } from '../styles/StyledMovieInfoBar';\r\n\r\nconst MovieInfoBar = ({ time, budget, revenue }) => {\r\n  return (\r\n    <StyledMovieInfoBar>\r\n      <div className='movieinfobar-content'>\r\n        <div className='movieinfobar-content-col'>\r\n          <FontAwesome className='fa-time' name='clock-o' size='2x' />\r\n          <span className='movieinfobar-info'>\r\n            Running time: {calcTime(time)}\r\n          </span>\r\n        </div>\r\n        <div className='movieinfobar-content-col'>\r\n          <FontAwesome className='fa-budget' name='money' size='2x' />\r\n          <span className='movieinfobar-info'>\r\n            Budget: {convertMoney(budget)}\r\n          </span>\r\n        </div>\r\n        <div className='movieinfobar-content-col'>\r\n          <FontAwesome className='fa-revenue' name='ticket' size='2x' />\r\n          <span className='movieinfobar-info'>\r\n            Revenue: {convertMoney(revenue)}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </StyledMovieInfoBar>\r\n  );\r\n};\r\n\r\nMovieInfoBar.propTypes = {\r\n  time: PropTypes.number,\r\n  budget: PropTypes.number,\r\n  revenue: PropTypes.number\r\n};\r\n\r\nexport default MovieInfoBar;\r\n","export default __webpack_public_path__ + \"static/media/unknown.17dbc607.png\";","import styled from 'styled-components';\r\n\r\nexport const StyledActor = styled.div`\r\n  font-family: 'Abel', sans-serif;\r\n  color: #fff;\r\n  background: #1c1c1c;\r\n  border-radius: 20px;\r\n  padding: 5px;\r\n  text-align: center;\r\n\r\n  img {\r\n    display: block;\r\n    width: 100%;\r\n    height: 200px;\r\n    object-fit: cover;\r\n    border-radius: 15px;\r\n  }\r\n\r\n  .actor-name {\r\n    display: block;\r\n    font-size: 18px;\r\n    margin: 10px 0 0 0;\r\n  }\r\n\r\n  .actor-character {\r\n    display: block;\r\n    font-size: 16px;\r\n    margin: 0 0 10px 0;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\nimport NoImage from '../images/unknown.png';\r\nimport { StyledActor } from '../styles/StyledActor';\r\n\r\nconst Actor = ({ actor }) => {\r\n  return (\r\n    <StyledActor>\r\n      <img\r\n        src={\r\n          actor.profile_path\r\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n            : NoImage\r\n        }\r\n        alt='Actor thumb'\r\n      />\r\n      <span className='actor-name'>{actor.name}</span>\r\n      <span className='actor-character'>{actor.character}</span>\r\n    </StyledActor>\r\n  );\r\n};\r\n\r\nActor.propTypes = {\r\n  actor: PropTypes.object\r\n};\r\n\r\nexport default Actor;\r\n","import { useMovieFetch } from './hooks/useMovieFetch';\r\nimport Navigation from './elements/Navigation';\r\nimport MovieInfo from './elements/MovieInfo';\r\nimport MovieInfoBar from './elements/MovieInfoBar';\r\nimport Actor from './elements/Actor';\r\nimport Grid from './elements/Grid';\r\nimport Spinner from './elements/Spinner';\r\n\r\nconst Movie = ({ movieId }) => {\r\n  const [movie, loading, error] = useMovieFetch(movieId);\r\n\r\n  if (error) return <div>Something went wrong...</div>;\r\n  if (loading) return <Spinner />;\r\n\r\n  return (\r\n    <>\r\n      <Navigation movieTitle={movie.original_title} />\r\n      <MovieInfo movie={movie} />\r\n      <MovieInfoBar\r\n        time={movie.runtime}\r\n        budget={movie.budget}\r\n        revenue={movie.revenue}\r\n      />\r\n      <Grid header='Actors'>\r\n        {movie.actors.map(actor => (\r\n          <Actor actor={actor} key={actor.credit_id} />\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport { API_URL, API_KEY } from '../../config';\r\n\r\nexport const useMovieFetch = movieId => {\r\n  const [state, setState] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setError(false);\r\n    setLoading(true);\r\n\r\n    try {\r\n      const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\r\n      const result = await (await fetch(endpoint)).json();\r\n      const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n      const creditsResult = await (await fetch(creditsEndpoint)).json();\r\n      const directors = creditsResult.crew.filter(\r\n        member => member.job === 'Director'\r\n      );\r\n      setState({\r\n        ...result,\r\n        actors: creditsResult.cast,\r\n        directors\r\n      });\r\n    } catch (error) {\r\n      setError(true);\r\n    }\r\n    setLoading(false);\r\n  }, [movieId]);\r\n\r\n  useEffect(() => {\r\n    if (localStorage[movieId]) {\r\n      setState(JSON.parse(localStorage[movieId]));\r\n      setLoading(false);\r\n    } else {\r\n      fetchData();\r\n    }\r\n  }, [movieId, fetchData]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(movieId, JSON.stringify(state));\r\n  }, [movieId, state]);\r\n\r\n  return [state, loading, error];\r\n};\r\n","const NotFound = () => <div>Nothing found here...</div>;\r\n\r\nexport default NotFound;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n","import { Router } from '@reach/router';\r\nimport Header from './elements/Header';\r\nimport Home from './Home';\r\nimport Movie from './Movie';\r\nimport NotFound from './NotFound';\r\nimport { GlobalStyle } from './styles/GlobalStyle';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Header />\r\n      <Router>\r\n        <Home path='/movie-app' />\r\n        <Movie path='/:movieId' />\r\n        <NotFound default />\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}